apiVersion: apps/v1
kind: Deployment
metadata:
  name: rigger-connect-api
  namespace: rigger-connect
  labels:
    app: rigger-connect-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rigger-connect-api
  template:
    metadata:
      labels:
        app: rigger-connect-api
        version: v1
    spec:
      containers:
      - name: api
        image: tiation/rigger-connect-api:latest
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: rigger-connect-secrets
              key: mongo-uri
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: rigger-connect-secrets
              key: jwt-secret
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: rigger-connect-api-service
  namespace: rigger-connect
  labels:
    app: rigger-connect-api
spec:
  selector:
    app: rigger-connect-api
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rigger-connect-api-ingress
  namespace: rigger-connect
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.riggerconnect.com
    secretName: rigger-connect-api-tls
  rules:
  - host: api.riggerconnect.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rigger-connect-api-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: rigger-connect-secrets
  namespace: rigger-connect
type: Opaque
data:
  mongo-uri: bW9uZ29kYjovL21vbmdvOjI3MDE3L3JpZ2dlcmNvbm5lY3Q=  # base64 encoded
  jwt-secret: eW91ci1zdXBlci1zZWNyZXQtand0LWtleQ==  # base64 encoded

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rigger-connect-config
  namespace: rigger-connect
data:
  NODE_ENV: "production"
  PORT: "3000"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
